model Competition {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    title       String
    description String

    image   Media  @relation(fields: [imageId], references: [id], onDelete: Restrict)
    imageId String

    teamCompetition Boolean
    teamLimit       Int     @default(1)

    teams    Team[]
    brackets Bracket[]
    topLists TopList[]
}

model Team {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    name String

    users         UserInTeam[]
    competition   Competition  @relation(fields: [competitionId], references: [id], onDelete: Cascade)
    competitionId String

    brackets BracketPart[]
    invites  Invite[]
}

model UserInTeam {
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
    teamId String

    isLeader Boolean @default(false)

    @@id(fields: [userId, teamId])
}

model Invite {
    id        String    @id @default(cuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
    teamId String

    invitee   User   @relation(fields: [inviteeId], references: [id], onDelete: Cascade)
    inviteeId String

    @@unique([teamId, inviteeId])
    @@index(fields: [inviteeId])
}
